#include <stdio.h>
#include <math.h>
#include <locale.h>
#include <stdlib.h>
#define PI 3.141592 //задаем символическую константу
#define n 40
#define p 80

void graph(int x3, int y3, int x4, int y4, char* array);

int main()
{

    setlocale(LC_ALL, "Russian");

    int w = 0, k, i, j;
    int x1, y1, x2, y2, x3, y3, x4, y4, a, x5, y5, x6, y6;
    float r;
    char* array;
    array = (char*) calloc(n * p, sizeof(char));

    {
        printf("\nВведите координаты отрезка: ");
        scanf_s("%d %d %d %d", &x1, &y1, &x2, &y2);

        printf("\nВыберите нужный вам пункт:\n");
        printf("1.Увеличение отрезка в k раз\n");
        printf("2.Уменьшение отрезка в k раз\n");
        printf("3.Поворот отрезка на k градусов\n");
        printf("4.Увеличение и поворот\n");
        printf("5.Пробный\n");
        printf("\nПункт ");
        scanf_s("%d", &w);


        if (w == 1)
        {
            printf("Введите коэффицент увеличения: ");
            scanf_s("%d", &k);
            if (k <= 0) printf("Введите положительный коэффициент!");
            x3 = x1 * k; // по матричному уравнению вида X=A*B
            y3 = y1 * k; // [x^, y^]=[x1*k+0*y1 x1*0+y1*k]
            x4 = x2 * k; // получаем новые координаьы увеличенного и отраженного отрезка
            y4 = y2 * k;
            x5 = x2;
            y5 = y2;
            x6 = x1 + (x2 - x1) * 2;
            y6 = y1;

            printf("Координаты смещеннного увеличенного отрезка равны: %d %d %d %d\n", x3, y3, x4, y4);

            if (abs(((y4 - y3) / (x4 - x3))) == 1) //случай, если отрезок расположен под углом в 45 градусов
            {
                if (x2 > x1 && y2 > y1) //координаты отрезка указаны слева направо снизу вверх
                {

                    //for (i = 0; i < x2 - x1 + 1; i++)    //кол-во итераций равно кол-ву точек, образующих отрезок
                        //array[n - y1 - i][x1 - 1 + i + 20] = '*';    //отображение исходного отрезка
                    graph(x3, y3, x4, y4, array);
                    for (i = 0; i < x4 - x3 + 1; i++)
                        array[n - y3 - i - 10][x3 - 1 + i + 20] = '*';    //отображение преобразованного отрезка
                    for (i = 0; i < x2 - x1 + 1; i++)    //кол-во итераций равно кол-ву точек, образующих отрезок
                        array[n - y1 - i][x1 - 1 + i] = '@';    //отображение исходного отрезка
                    for (i = 0; i < x6 - x5 + 1; i++)
                        array[n - y5 + i][x5 - 1 + i] = '@'; //отображение отзеркаливания
                }


                else if (x4 > x3 && y4 < y3) //координаты отрезка указаны слева направо сверху вниз
                {
                    for (i = 0; i < x2 - x1 + 1; i++)
                        array[n - y1 - i][x1 - 1 + i + 20] = '*';

                    for (i = 0; i < x4 - x3 + 1; i++)
                        array[n - y3 + i - 10][x3 - 1 + i + 20] = '*';
                }
            }

            else if (y3 == y4 && x3 < x4) //случай, если отрезок расположен горизонтально
            {
                for (i = 0; i < abs(x2 - x1) + 1; i++)
                    array[n - y1][x1 - 1 + i + 20] = '*';

                for (i = 0; i < abs(x4 - x3) + 1; i++)
                    array[n - y3][x3 - 1 + i + 20] = '*';
            }

            else if (x4 == x3) //случай, если отрезок расположен вертикально
            {
                for (i = 0; i < abs(y2 - y1) + 1; i++)
                    array[n - x1 - i][0 + 20] = '*';

                for (i = 0; i < abs(y4 - y3) + 1; i++)
                    array[n - x3 - i][20] = '*';
            }

            else    //случай, если отрезок не подпадает ни под одно из условий выше
            {
                array[n - y1 - 10][x1 - 1 + 20] = '*';
                array[n - y2 - 10][x2 - 1 + 20] = '*';

                array[n - y3 - 10][x3 - 1 + 20] = '*';
                array[n - y4 - 10][x4 - 1 + 20] = '*';
            }

            for (i = 0; i < n; i++) //вывод массива с графическим изображением отрезка
            {
                printf("\n");
                for (j = 0; j < n; j++)
                    printf("%3c", array[i][j]);
            }

        }

        else if (w == 2)
        {
            printf("Введите коэффицент уменьшения: ");
            scanf_s("%d", &k);
            x3 = x1 / k;
            y3 = y1 / k;
            x4 = x2 / k;
            y4 = y2 / k;
            printf("Координаты уменьшенного отрезка равны: %d %d %d %d\n", x3, y3, x4, y4);

            if (abs(((y4 - y3) / (x4 - x3))) == 1) //случай, если отрезок расположен под углом в 45 градусов
            {
                if (x4 > x3 && y4 > y3 && x2 > x1 && y2 > y1) //координаты отрезка указаны слева направо снизу вверх
                {
                    for (i = 0; i < x2 - x1 + 1; i++)
                        array[n - y1 - i][x1 - 1 + i] = '*';
                    //graph(x3, y3, x4, y4, i, array);
                    for (i = 0; i < x4 - x3 + 1; i++)
                        array[n - y3 - i - 10][x3 - 1 + i + 20] = '*';
                }

                else if (x4 > x3 && y4 < y3) //координаты отрезка указаны слева направо сверху вниз
                {
                    for (i = 0; i < x2 - x1 + 1; i++)
                        array[n - y1 - i][x1 - 1 + i] = '*';

                    for (i = 0; i < x4 - x3 + 1; i++)
                        array[n - y3 + i - 10][x3 - 1 + i + 10] = '*';
                }
            }

            else if (y3 == y4 && x3 < x4) //случай, если отрезок расположен горизонтально
            {
                for (i = 0; i < abs(x2 - x1) + 1; i++)
                    array[n - y1][x1 - 1 + i] = '*';

                for (i = 0; i < abs(x4 - x3) + 1; i++)
                    array[n - y3][x3 - 1 + i + 10] = '*';
            }

            else if (x4 == x3) //случай, если отрезок расположен вертикально
            {
                for (i = 0; i < abs(y2 - y1) + 1; i++)
                    array[n - x1 - i][0] = '*';

                for (i = 0; i < abs(y4 - y3) + 1; i++)
                    array[n - x3 - i][10] = '*';
            }

            else    //случай, если отрезок не подпадает ни под одно из условий выше
            {
                array[n - y1 - 10][x1 - 1] = '*';
                array[n - y2 - 10][x2 - 1] = '*';

                array[n - y3 - 10][x3 - 1 + 10] = '*';
                array[n - y4 - 10][x4 - 1 + 10] = '*';
            }

            for (i = 0; i < n; i++) //вывод массива с графическим изображением отрезка
            {
                printf("\n");
                for (j = 0; j < n; j++)
                    printf("%3c", array[i][j]);
            }

        }

        else if (w == 3)
        {
            printf("Введите угол поворота: ");
            scanf_s("%d", &a);
            r = a * PI / 180;
            //x = x*cos(a)-y*sin(a)
            //y = x*sin(a)+y*cos(a)
            //x и y - исходные координаты старой точки
            x3 = x2 + (x1 - x2) * cos(r) - sin(r) * (y2 - y1);
            y3 = y1 + (x1 - x2) * sin(r) + (y2 - y1) * cos(r);
            x4 = x1 + (x2 - x1) * cos(r) - sin(r) * (y1 - y2);
            y4 = y2 + (x2 - x1) * cos(r) - sin(r) * (y1 - y2);
            printf("Координаты повернутого отрезка: %d %d %d %d\n", x3, y3, x4, y4);

            if (abs(((y4 - y3) / (x4 - x3))) == 1) //случай, если отрезок расположен под углом в 45 градусов
            {
                if (x4 > x3 && y4 > y3 && x2 > x1 && y2 > y1) //координаты отрезка указаны слева направо снизу вверх
                {
                    for (i = 0; i < x2 - x1 + 1; i++)
                        array[n - y1 - i][x1 - 1 + i] = '*';
                    //graph(x3, y3, x4, y4, i, array);
                    for (i = 0; i < x4 - x3 + 1; i++)
                        array[n - y3 - i - 10][x3 - 1 + i + 20] = '*';
                }
                else if (x4 > x3 && y4 < y3) //координаты отрезка указаны слева направо сверху вниз
                {
                    for (i = 0; i < x2 - x1 + 1; i++)
                        array[n - y1 - i][x1 - 1 + i] = '*';

                    for (i = 0; i < x4 - x3 + 1; i++)
                        array[n - y3 + i - 10][x3 - 1 + i + 10] = '*';
                }
            }

            else if (y3 == y4 && x3 < x4) //случай, если отрезок расположен горизонтально
            {
                for (i = 0; i < abs(x2 - x1) + 1; i++)
                    array[n - y1][x1 - 1 + i] = '*';

                for (i = 0; i < abs(x4 - x3) + 1; i++)
                    array[n - y3][x3 - 1 + i + 10] = '*';
            }

            else if (x4 == x3) //случай, если отрезок расположен вертикально
            {
                for (i = 0; i < abs(y2 - y1) + 1; i++)
                    array[n - x1 - i][0] = '*';

                for (i = 0; i < abs(y4 - y3) + 1; i++)
                    array[n - x3 - i][10] = '*';
            }

            else    //случай, если отрезок не подпадает ни под одно из условий выше
            {
                array[n - y1 - 10][x1 - 1] = '*';
                array[n - y2 - 10][x2 - 1] = '*';

                array[n - y3 - 10][x3 - 1 + 10] = '*';
                array[n - y4 - 10][x4 - 1 + 10] = '*';
            }

            for (i = 0; i < n; i++) //вывод массива с графическим изображением отрезка
            {
                printf("\n");
                for (j = 0; j < n; j++)
                    printf("%3c", array[i][j]);
            }
        }

        else if (w == 4)
        {
            printf("Введите положительный коэффицент увеличения: ");
            scanf_s("%d", &k);
            if (k <= 0) printf("Введите положительный коэффицент!");
            x3 = x1 * k;
            y3 = y1 * k;
            x4 = x2 * k;
            y4 = y2 * k;

            printf("Введите угол поворота: ");
            scanf_s("%d", &a);
            r = a * PI / 180;
            x3 = x3 + (x3 - x4) * cos(r) - sin(r) * (y4 - y3);
            y3 = y3 + (x3 - x4) * sin(r) + (y4 - y3) * cos(r);
            x4 = x3 + (x4 - x3) * cos(r) - sin(r) * (y3 - y4);
            y4 = y4 + (x4 - x3) * cos(r) - sin(r) * (y3 - y4);
            printf("Координаты смещенного повернутого повернутого отрезка: %d %d %d %d\n", x3, y3, x4, y4);

            if (abs(((y4 - y3) / (x4 - x3))) == 1) //случай, если отрезок расположен под углом в 45 градусов
            {
                if (x4 > x3 && y4 > y3 && x2 > x1 && y2 > y1) //координаты отрезка указаны слева направо снизу вверх
                {
                    for (i = 0; i < x2 - x1 + 1; i++)
                        array[n - y1 - i][x1 - 1 + i] = '*';
                    //graph(x3, x4, y3, y4, i, array);
                    for (i = 0; i < x4 - x3 + 1; i++)
                        array[n - y3 + i - 10][x3 - 1 + i + 20] = '*';
                }
                else if (x4 > x3 && y4 < y3) //координаты отрезка указаны слева направо сверху вниз
                {
                    for (i = 0; i < x2 - x1 + 1; i++)
                        array[n - y1 - i][x1 - 1 + i] = '*';
                    //graph(x3, x4, y3, y4, i, array);
                    for (i = 0; i < x4 - x3 + 1; i++)
                        array[n - y3 + i - 10][x3 - 1 + i + 20] = '*';
                }
            }

            else if (y3 == y4 && x3 < x4) //случай, если отрезок расположен горизонтально
            {
                for (i = 0; i < abs(x2 - x1) + 1; i++)
                    array[n - y1][x1 - 1 + i] = '*';

                for (i = 0; i < abs(x4 - x3) + 1; i++)
                    array[n - y3][x3 - 1 + i + 10] = '*';
            }

            else if (x4 == x3) //случай, если отрезок расположен вертикально
            {
                for (i = 0; i < abs(y2 - y1) + 1; i++)
                    array[n - x1 - i][0] = '*';

                for (i = 0; i < abs(y4 - y3) + 1; i++)
                    array[n - x3 - i][10] = '*';
            }

            else    //случай, если отрезок не подпадает ни под одно из условий выше
            {
                array[n - y1 - 10][x1 - 1] = '*';
                array[n - y2 - 10][x2 - 1] = '*';

                array[n - y3 - 10][x3 - 1 + 10] = '*';
                array[n - y4 - 10][x4 - 1 + 10] = '*';
            }

            for (i = 0; i < n; i++) //вывод массива с графическим изображением отрезка
            {
                printf("\n");
                for (j = 0; j < n; j++)
                    printf("%3c", array[i][j]);
            }

        }

       
    }
}

//void graph(int x3, int y3, int x4, int y4, char* array) {
//    int i = 0;
//    for (i = 0; i < x4 - x3 + 1; i++)
//    array[n - y3 - i - 10][x3 - 1 + i + 10] = '*';
//}
